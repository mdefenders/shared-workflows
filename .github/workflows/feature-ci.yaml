name: Feature Branch CI

on:
  workflow_call:

jobs:
  call-metrics-init:
    if: startsWith(github.head_ref || github.ref_name, 'feature/') && github.ref_type == 'branch'
    name: Init Metrics Workflow
    uses: mdefenders/shared-workflows/.github/workflows/metrics-init.yaml@dev

  action-based-ci:
    if: startsWith(github.head_ref || github.ref_name, 'feature/') && github.ref_type == 'branch'
    needs: call-metrics-init
    name: Action-Based CI Workflow
    runs-on: ubuntu-latest
    outputs:
      new-tag: ${{ steps.get-image-tags.outputs.new-tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Run Unit Tests
        uses: mdefenders-actions/ci-code-quality@dev
        with:
          minCoverage: ${{ vars.MIN_COVERAGE }}

      - name: Get Image Tags
        id: get-image-tags
        uses: mdefenders-actions/ci-prepare-docker-build@dev

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ steps.get-image-tags.outputs.new-image }}

      - name: Build and push (optional) Docker image
        id: build-and-push
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.get-image-tags.outputs.all-images }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Install Trivy Template
        run: |
          mkdir -p contrib
          wget -q -O contrib/html.tpl https://raw.githubusercontent.com/mdefenders/misc/refs/heads/main/aquasecurity/trivy/contrib/html.tpl          

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: '${{ steps.get-image-tags.outputs.new-image }}:${{  steps.get-image-tags.outputs.new-tag }}'
          format: 'template'
          template: "@contrib/html.tpl"
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  call-scan-docker:
    needs: action-based-ci
    if: startsWith(github.head_ref || github.ref_name, 'feature/') && github.ref_type == 'branch'
    name: Scan Docker Workflow
    uses: mdefenders/shared-workflows/.github/workflows/scan-docker.yaml@dev
    with:
      new-tag: ${{ needs.action-based-ci.outputs.new-tag }}
    secrets: inherit

  call-cd-deploy:
    needs: action-based-ci
    if: startsWith(github.head_ref || github.ref_name, 'feature/') && github.ref_type == 'branch'
    name: Deploy Image Workflow
    uses: mdefenders/shared-workflows/.github/workflows/cd-deploy.yaml@dev
    with:
      new-tag: ${{ needs.action-based-ci.outputs.new-tag }}
      gitops-file: ${{ vars.GITOPS_FILE_PATH || 'deploy/environments' }}/dev/${{ vars.GITOPS_FILE_NAME || 'values.yaml' }}
      environment: 'dev'
      replicas: ${{ fromJSON(vars.DEV_TEST_REPLICAS || '3') }}

  call-trigger-tests:
    needs: call-cd-deploy
    if: startsWith(github.head_ref || github.ref_name, 'feature/') && github.ref_type == 'branch'
    name: Trigger Post-Deploy Tests Workflow
    uses: mdefenders/shared-workflows/.github/workflows/trigger-tests.yaml@dev
    with:
      new-tag: ${{ needs.call-cd-deploy.outputs.new-tag }}
      current-tag: ${{ needs.call-cd-deploy.outputs.current-tag }}
      environment: 'dev'
    secrets: inherit

  call-cd-undeploy:
    needs: [ call-cd-deploy, call-trigger-tests ]
    if: always() && startsWith(github.head_ref || github.ref_name, 'feature/') && github.ref_type == 'branch'
    name: Deploy Image Workflow
    uses: mdefenders/shared-workflows/.github/workflows/cd-deploy.yaml@dev
    with:
      new-tag: ${{ needs.call-trigger-tests.outputs.new-tag }}
      gitops-file: ${{ vars.GITOPS_FILE_PATH || 'deploy/environments' }}/dev/${{ vars.GITOPS_FILE_NAME || 'values.yaml' }}
      environment: 'dev'
      replicas: ${{ fromJSON(vars.DEV_REPLICAS || '0') }}

  call-metrics-push-success:
    needs: [ action-based-ci, call-scan-docker, call-cd-deploy, call-cd-undeploy, call-trigger-tests, action-based-ci, call-metrics-init ]
    if: startsWith(github.head_ref || github.ref_name, 'feature/') && github.ref_type == 'branch'
    name: Push Metrics Workflow
    uses: mdefenders/shared-workflows/.github/workflows/metrics-push.yaml@dev
    with:
      start-time: ${{ needs.call-metrics-init.outputs.start-time }}
      workflow-name: 'Feature Branch CI'
      workflow-success: 1
    secrets: inherit

  call-metrics-push-failure:
    needs: [ action-based-ci, call-scan-docker, call-cd-deploy, call-cd-undeploy, call-trigger-tests, action-based-ci, call-metrics-init ]
    if: failure() && startsWith(github.head_ref || github.ref_name, 'feature/') && github.ref_type == 'branch'
    name: Push Metrics Workflow
    uses: mdefenders/shared-workflows/.github/workflows/metrics-push.yaml@dev
    with:
      start-time: ${{ needs.call-metrics-init.outputs.start-time }}
      workflow-name: 'Feature Branch CI'
    secrets: inherit