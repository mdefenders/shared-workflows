name: Promote to Prod

on:
  workflow_call:

jobs:
  call-metrics-init:
    if: startsWith(github.head_ref || github.ref_name, 'main')
    name: Call Init Metrics Workflow
    uses: mdefenders/shared-workflows/.github/workflows/metrics-init.yaml@v2

  call-get-tag:
    if: startsWith(github.head_ref || github.ref_name, 'main')
    name: Check Release Branch
    runs-on: ubuntu-latest
    outputs:
      new-tag: ${{ steps.get-tag.outputs.new-tag }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate SemVer Format
        id: get-tag
        run: |
          VERSION=$(jq -r 'select(.version | test("^[0-9]+\\.[0-9]+\\.[0-9]+$")) | .version' version.json)
          if [[ -z "$VERSION" ]]; then
            echo "No valid release name found in version.json, exiting"
            exit 1
          fi          

          echo "Latest SemVer tag: $VERSION"
          echo "new-tag=$VERSION" >> $GITHUB_OUTPUT
          echo "NEW_TAG=$VERSION" >> "$GITHUB_ENV"

      - name: Check if Docker image exists on DockerHub
        id: check-image
        uses: tyriis/docker-image-tag-exists@v2.1.0
        with:
          registry: docker.io
          repository: ${{ github.repository }}
          tag: ${{ env.NEW_TAG }}

      - name: Exit if image not found
        if: steps.check-image.outputs.tag == 'not found'
        run: |
          echo "Docker image ${{ github.repository }}:${{ env.NEW_TAG }} not found . Exiting."
          exit 1

  call-cd-deploy:
    needs: call-get-tag
    if: startsWith(github.head_ref || github.ref_name, 'main')
    name: Call Deploy Image Workflow
    uses: mdefenders/shared-workflows/.github/workflows/cd-deploy.yaml@v2
    with:
      new-tag: ${{ needs.call-get-tag.outputs.new-tag }}
      gitops-file: ${{ vars.GITOPS_FILE_PATH || 'deploy/environments' }}/prod/${{ vars.GITOPS_FILE_NAME || 'values.yaml' }}
      environment: 'prod'

  call-trigger-tests:
    needs: call-cd-deploy
    if: startsWith(github.head_ref || github.ref_name, 'main') && needs.call-cd-deploy.outputs.current-tag != needs.call-get-tag.outputs.new-tag
    name: Call Trigger Post-Deploy Tests Workflow
    uses: mdefenders/shared-workflows/.github/workflows/trigger-tests.yaml@v2
    with:
      new-tag: ${{ needs.call-cd-deploy.outputs.new-tag }}
      current-tag: ${{ needs.call-cd-deploy.outputs.current-tag }}
      environment: 'prod'
    secrets: inherit

  rollback-cd-deploy:
    needs: call-trigger-tests
    if: failure() && startsWith(github.head_ref || github.ref_name, 'main')
    name: Call Rollback Deploy Image Workflow
    uses: mdefenders/shared-workflows/.github/workflows/cd-deploy.yaml@v2
    with:
      new-tag: ${{ needs.call-trigger-tests.outputs.current-tag }}
      gitops-file: ${{ vars.GITOPS_FILE_PATH || 'deploy/environments' }}/prod/${{ vars.GITOPS_FILE_NAME || 'values.yaml' }}
      environment: 'prod'
      rollback: true
    secrets: inherit

  call-metrics-push-success:
    needs: [ call-get-tag, call-cd-deploy, call-trigger-tests, call-metrics-init ]
    if: ${{ startsWith(github.head_ref || github.ref_name, 'main') }}
    name: Call Push Metrics Workflow
    uses: mdefenders/shared-workflows/.github/workflows/metrics-push.yaml@v2
    with:
      start-time: ${{ needs.call-metrics-init.outputs.start-time }}
      workflow-name: 'Promote to Prod'
      workflow-success: 1
    secrets: inherit

  call-metrics-push-failure:
    needs: [ call-get-tag, call-cd-deploy, call-trigger-tests, call-metrics-init ]
    if: ${{ failure() && startsWith(github.head_ref || github.ref_name, 'main') }}
    name: Call Push Metrics Workflow
    uses: mdefenders/shared-workflows/.github/workflows/metrics-push.yaml@v2
    with:
      start-time: ${{ needs.call-metrics-init.outputs.start-time }}
      workflow-name: 'Promote to Prod'
    secrets: inherit