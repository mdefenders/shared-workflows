name: Metrics Push Workflow

on:
  workflow_call:
    inputs:
      start-time:
        type: string
      workflow-name:
        type: string
      workflow-success:
        type: string
        default: 0
    secrets:
      PROM_PUSH_USER:
        required: true
      PROM_PUSH_TOKEN:
        required: true

jobs:
  metrics-push:
    name: Push Metrics to Grafana
    runs-on: ubuntu-latest
    steps:
      - name: Install prom-push-cli
        run: |
          wget https://github.com/fgouteroux/prom-push-cli/releases/download/v${{ vars.PROM_CLI_VERSION || '0.1.6' }}/prom-push-cli_${{ vars.PROM_CLI_VERSION || '0.1.6' }}_Linux_x86_64.tar.gz || true
          tar -zxf prom-push-cli_${{ vars.PROM_CLI_VERSION || '0.1.6' }}_Linux_x86_64.tar.gz || true

      - name: Push Metrics
        run: |
          METRIC_TIMESTAMP=$(date +%s)
          LOG_TIMESTAMP=$(date +%s%N)
          DURATION=$(($METRIC_TIMESTAMP - ${{ inputs.start-time }}))
          LOG_ENTRY="Workflow run_id=${GITHUB_RUN_ID} name=${{ inputs.workflow-name }} duration=$DURATION"
          #if [[ -z "${{ inputs.start-time }}" ]]; then
          #  echo "# TYPE gha_workflow_success gauge" >> metrics.prom
          #  echo "# TYPE gha_workflow_success gauge" >> metrics.prom
          #  echo "gha_workflow_success{name=\"${{ inputs.workflow-name }}\", level=\"workflow\", run_id=\"${GITHUB_RUN_ID}\", service=\"${GITHUB_REPOSITORY}\"} 0 $METRIC_TIMESTAMP" >> metrics.prom
          #  LOG_ENTRY="${LOG_ENTRY} status=failure"
          #  RUN_STATUS="failure"
          #else
          #  echo "# TYPE gha_workflow_success gauge" >> metrics.prom
          #  echo "gha_workflow_success{name=\"${{ inputs.workflow-name }}\", level=\"workflow\", run_id=\"${GITHUB_RUN_ID}\", service=\"${GITHUB_REPOSITORY}\"} ${{ inputs.workflow-success }} $METRIC_TIMESTAMP" >> metrics.prom
          #  echo "# TYPE gha_workflow_duration_seconds gauge" >> metrics.prom
          #  echo "gha_workflow_duration_seconds{name=\"${{ inputs.workflow-name }}\", level=\"workflow\", run_id=\"${GITHUB_RUN_ID}\", service=\"${GITHUB_REPOSITORY}\"} $DURATION $METRIC_TIMESTAMP" >> metrics.prom
          #  LOG_ENTRY="${LOG_ENTRY} status=success"
          #  RUN_STATUS="success"
          #fi
          #cat metrics.prom
          #cat metrics.prom | ./prom-push-cli --url ${{ vars.PROM_PUSH_URL }} \
          #--header "Authorization=Bearer ${{ secrets.PROM_PUSH_USER }}:${{ secrets.PROM_PUSH_TOKEN }}" --job-label github_actions || true
          #curl -ks -X POST https://{{ vars.LOKI_PUSH_HOST }}/loki/api/v1/push \
          #  -H "Content-Type: application/json" \ 
          #  -H "Authorization: Basic $AUTH_TOKEN" \
          #  -d "{\"streams\": [{\"stream\": {\"service\": \"${GITHUB_REPOSITORY}\",\"name\": \"${{ inputs.workflow-name }}\",\"run_id\": \"${GITHUB_RUN_ID}\",\"status\": \"${RUN_STATUS}\"},\"values\": [[\"$METRIC_TIMESTAMP\", \"$LOG_ENTRY\"]]}]}"
          curl -vks -X POST "${{ vars.LOKI_PUSH_HOST }}" \
            -H "Content-Type: application/json" \
            -H "Authorization: Basic ${{ secrets.PROM_PUSH_TOKEN }}" \
            -d "{\"streams\": [{\"stream\": {\"service\": \"${GITHUB_REPOSITORY}\",\"name\": \"${{ inputs.workflow-name }}\",\"run_id\": \"${GITHUB_RUN_ID}\",\"status\": \"${RUN_STATUS}\"},\"values\": [[\"$METRIC_TIMESTAMP\", \"$LOG_ENTRY\"]]}]}"
          
