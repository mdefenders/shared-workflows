name: Build Docker Image

on:
  workflow_call:
    inputs:
      build-args:
        type: string
      push-image:
        type: boolean
        default: false
    outputs:
      link-tag:
        value: ${{ jobs.build-and-push.outputs.link-tag }}
    secrets:
      DOCKER_PASSWORD:
        required: true

jobs:
  build-and-push:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    outputs:
      link-tag: ${{ steps.get-tag.outputs.link-tag }}
    steps:
      - name: Cleanup the build folder
        if: ${{ inputs.push-image }}
        run: |
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          ls -la ./

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Get Tag
        id: get-tag
        run: |
          echo "DOCKERHUB_REPO=$GITHUB_REPOSITORY" >> $GITHUB_ENV
          
          if [[ $GITHUB_REF_NAME =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Release tag found"
            echo "TAGS=$GITHUB_REPOSITORY:latest,$GITHUB_REPOSITORY:$GITHUB_REF_NAME" >> $GITHUB_ENV
            LINK_TAG=latest
          elif [[ $GITHUB_REF_NAME == develop ]]; then
            echo "Develop tag found"
            echo "TAGS=$GITHUB_REPOSITORY:$GITHUB_REF_NAME-latest,$GITHUB_REPOSITORY:$GITHUB_REF_NAME-${GITHUB_SHA:0:7}" >> $GITHUB_ENV
            LINK_TAG=$GITHUB_REF_NAME-${GITHUB_SHA:0:7}
          elif [[ $GITHUB_REF_NAME == feature/* ]]; then
            echo "Feature tag/branch found"
            FEATURE_NAME="${GITHUB_REF_NAME#feature/}"
            echo "TAGS=$GITHUB_REPOSITORY:$FEATURE_NAME-latest,$GITHUB_REPOSITORY:$FEATURE_NAME-${GITHUB_SHA:0:7}" >> $GITHUB_ENV
            LINK_TAG=$FEATURE_NAME-${GITHUB_SHA:0:7}          
          else
            echo "Unknown tag/branch found"
            echo "TAGS=$GITHUB_REPOSITORY:${GITHUB_SHA:0:7}" >> $GITHUB_ENV
            LINK_TAG=${GITHUB_SHA:0:7}
          fi
          echo "LINK_TAG=$LINK_TAG" >> $GITHUB_ENV
          echo "link-tag=$LINK_TAG" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        if: ${{ inputs.push-image }}
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.DOCKERHUB_REPO }}

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update version.json
        if: ${{ inputs.push-image }}
        run: |
          echo "Updating version.json with link tag: $LINK_TAG"
          touch version.json
          jq --arg tag "$LINK_TAG" --arg commit "${GITHUB_SHA:0:7}" '.version = $tag | .commit = $commit' version.json > tmp.$$.json && mv tmp.$$.json version.json
          echo "Updated version.json:"
          cat version.json
          git add version.json
          git commit -m "github-actions[bot] version.json updated with image version $LINK_TAG"
          git push


      - name: Build and push (optional) Docker image
        id: build-and-push
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          file: ./Dockerfile
          push: ${{ inputs.push-image }}
          tags: ${{ env.TAGS }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ inputs.build-args }}

      - name: Print summary
        if: ${{ inputs.push-image }}
        run: |
          echo '### The image repo tags:' >> $GITHUB_STEP_SUMMARY
          echo '['${{ env.DOCKERHUB_REPO }}'](https://hub.docker.com/repository/docker/'${{ env.DOCKERHUB_REPO }}'/tags/)' >> $GITHUB_STEP_SUMMARY
          echo '### The built image content:' >> $GITHUB_STEP_SUMMARY
          echo '['${{ env.DOCKERHUB_REPO }}':'${{ env.LINK_TAG }}'](https://hub.docker.com/layers/'${{ env.DOCKERHUB_REPO }}'/'${{ env.LINK_TAG }}'/images/'${{ steps.build-and-push.outputs.digest }}')' >> $GITHUB_STEP_SUMMARY