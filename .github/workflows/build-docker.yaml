name: Build Docker Image

on:
  workflow_call:
    inputs:
      build-args:
        type: string
      push-image:
        type: boolean
        default: false
      commit-version:
        type: boolean
        default: false
    outputs:
      new-tag:
        value: ${{ jobs.build-and-push.outputs.new-tag }}
    secrets:
      DOCKER_PASSWORD:
        required: true

jobs:
  build-and-push:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    outputs:
      new-tag: ${{ steps.get-tag.outputs.new-tag }}
    steps:
      - name: Cleanup the build folder
        if: ${{ inputs.push-image }}
        run: |
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          ls -la ./

      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Tag
        id: get-tag
        run: |
          echo "DOCKERHUB_REPO=$GITHUB_REPOSITORY" >> "$GITHUB_ENV"
              if [ "$GITHUB_EVENT_NAME" = "pull_request" ]; then
                SHORT_SHA=pr-${{ github.event.pull_request.number }}
              else
                FULL_SHA=${{ github.sha }}
                SHORT_SHA="${FULL_SHA:0:7}"
              fi

          # Normalize the branch name for both push and pull_request
          BRANCH_NAME="${GITHUB_HEAD_REF:-$GITHUB_REF_NAME}"
          echo "Resolved branch: $BRANCH_NAME"

          case "$BRANCH_NAME" in
            main)
              echo "Main branch found"
              VERSION=$(jq -r 'select(.version | test("^[0-9]+\\.[0-9]+\\.[0-9]+$")) | .version' version.json)
              if [[ -z "$VERSION" ]]; then
                echo "No valid release name found in version.json, exiting"
                exit 1
              fi
              # Increment patch version
              IFS='.' read -r major minor patch <<< "$VERSION"
              PATCH_NEXT=$((patch + 1))
              INCREMENTED_VERSION="$major.$minor.$PATCH_NEXT"
              TAGS="$GITHUB_REPOSITORY:latest,$GITHUB_REPOSITORY:$INCREMENTED_VERSION"
              echo "VERSION=$INCREMENTED_VERSION" >> $GITHUB_ENV
              NEW_TAG="$INCREMENTED_VERSION"
              ;;

            feature/*)
              echo "Feature branch found"
              FEATURE_NAME="${BRANCH_NAME#feature/}"
              TAGS="$GITHUB_REPOSITORY:$FEATURE_NAME-latest,$GITHUB_REPOSITORY:$FEATURE_NAME-$SHORT_SHA"
              NEW_TAG="$FEATURE_NAME-$SHORT_SHA"
              ;;         

            *)
              echo "Unknown branch: using SHA only"
              TAGS="$GITHUB_REPOSITORY:$SHORT_SHA"
              NEW_TAG="$SHORT_SHA"
              ;;
          esac

          echo "TAGS=$TAGS" >> "$GITHUB_ENV"
          echo "NEW_TAG=$NEW_TAG" >> "$GITHUB_ENV"
          echo "new-tag=$NEW_TAG" >> "$GITHUB_OUTPUT"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        if: ${{ inputs.push-image }}
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.DOCKERHUB_REPO }}

      - name: Update version.json
        if: ${{ inputs.push-image }}
        run: |
          set -o pipefail
          VERSION="${VERSION:-SNAPSHOT}"
          echo "Updating version.json with tag: $NEW_TAG, version: $VERSION, commit: ${GITHUB_SHA:0:7}"
          [ -s version.json ] || echo '{}' > version.json
          jq --arg version "$VERSION" --arg tag "$NEW_TAG" --arg commit "${GITHUB_SHA:0:7}" \
            '.version = version | .commit = $commit | .tag = tag' version.json > tmp.json && mv tmp.json version.json          
          
          echo "Updated version.json:"
          cat version.json

      - name: Commit version.json
        if: ${{ env.VERSION }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          BRANCH_NAME="${{ github.head_ref || github.ref_name }}"
          echo "Working on branch: $BRANCH_NAME"
          git pull origin "$BRANCH_NAME" || echo "No changes to pull"
          git checkout "$BRANCH_NAME"

          git add version.json

          git commit -m "github-actions[bot] version.json updated with image version $NEW_TAG" || echo "No changes to commit"
          git push origin "$BRANCH_NAME" || echo "No changes to push"

      - name: Build and push (optional) Docker image
        id: build-and-push
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          file: ./Dockerfile
          push: ${{ inputs.push-image }}
          tags: ${{ env.TAGS }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ inputs.build-args }}

      - name: Print summary
        if: ${{ inputs.push-image }}
        run: |
          echo '### The image repo tags:' >> $GITHUB_STEP_SUMMARY
          echo '['${{ env.DOCKERHUB_REPO }}'](https://hub.docker.com/repository/docker/'${{ env.DOCKERHUB_REPO }}'/tags/)' >> $GITHUB_STEP_SUMMARY
          echo '### The built image content:' >> $GITHUB_STEP_SUMMARY
          echo '['${{ env.DOCKERHUB_REPO }}':'${{ env.NEW_TAG }}'](https://hub.docker.com/layers/'${{ env.DOCKERHUB_REPO }}'/'${{ env.NEW_TAG }}'/images/'${{ steps.build-and-push.outputs.digest }}')' >> $GITHUB_STEP_SUMMARY